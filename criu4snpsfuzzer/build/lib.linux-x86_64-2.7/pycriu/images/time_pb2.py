# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: time.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='time.proto',
  package='',
  serialized_pb=_b('\n\ntime.proto\"*\n\x07timeval\x12\x0e\n\x06tv_sec\x18\x01 \x02(\x04\x12\x0f\n\x07tv_usec\x18\x02 \x02(\x04')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_TIMEVAL = _descriptor.Descriptor(
  name='timeval',
  full_name='timeval',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='tv_sec', full_name='timeval.tv_sec', index=0,
      number=1, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tv_usec', full_name='timeval.tv_usec', index=1,
      number=2, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14,
  serialized_end=56,
)

DESCRIPTOR.message_types_by_name['timeval'] = _TIMEVAL

timeval = _reflection.GeneratedProtocolMessageType('timeval', (_message.Message,), dict(
  DESCRIPTOR = _TIMEVAL,
  __module__ = 'time_pb2'
  # @@protoc_insertion_point(class_scope:timeval)
  ))
_sym_db.RegisterMessage(timeval)


# @@protoc_insertion_point(module_scope)
