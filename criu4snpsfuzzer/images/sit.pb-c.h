/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: sit.proto */

#ifndef PROTOBUF_C_sit_2eproto__INCLUDED
#define PROTOBUF_C_sit_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "opts.pb-c.h"

typedef struct _SitEntry SitEntry;


/* --- enums --- */


/* --- messages --- */

struct  _SitEntry
{
  ProtobufCMessage base;
  protobuf_c_boolean has_link;
  uint32_t link;
  size_t n_local;
  uint32_t *local;
  size_t n_remote;
  uint32_t *remote;
  protobuf_c_boolean has_ttl;
  uint32_t ttl;
  protobuf_c_boolean has_tos;
  uint32_t tos;
  protobuf_c_boolean has_pmtudisc;
  protobuf_c_boolean pmtudisc;
  protobuf_c_boolean has_proto;
  uint32_t proto;
  protobuf_c_boolean has_flags;
  uint32_t flags;
  protobuf_c_boolean has_encap_type;
  uint32_t encap_type;
  protobuf_c_boolean has_encap_flags;
  uint32_t encap_flags;
  protobuf_c_boolean has_encap_sport;
  uint32_t encap_sport;
  protobuf_c_boolean has_encap_dport;
  uint32_t encap_dport;
  protobuf_c_boolean has_rd_prefixlen;
  uint32_t rd_prefixlen;
  size_t n_rd_prefix;
  uint32_t *rd_prefix;
  protobuf_c_boolean has_relay_prefixlen;
  uint32_t relay_prefixlen;
  size_t n_relay_prefix;
  uint32_t *relay_prefix;
};
#define SIT_ENTRY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sit_entry__descriptor) \
    , 0,0, 0,NULL, 0,NULL, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,NULL, 0,0, 0,NULL }


/* SitEntry methods */
void   sit_entry__init
                     (SitEntry         *message);
size_t sit_entry__get_packed_size
                     (const SitEntry   *message);
size_t sit_entry__pack
                     (const SitEntry   *message,
                      uint8_t             *out);
size_t sit_entry__pack_to_buffer
                     (const SitEntry   *message,
                      ProtobufCBuffer     *buffer);
SitEntry *
       sit_entry__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sit_entry__free_unpacked
                     (SitEntry *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*SitEntry_Closure)
                 (const SitEntry *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor sit_entry__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_sit_2eproto__INCLUDED */
