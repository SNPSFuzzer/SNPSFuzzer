/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: regfile.proto */

#ifndef PROTOBUF_C_regfile_2eproto__INCLUDED
#define PROTOBUF_C_regfile_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "opts.pb-c.h"
#include "fown.pb-c.h"

typedef struct _RegFileEntry RegFileEntry;


/* --- enums --- */


/* --- messages --- */

struct  _RegFileEntry
{
  ProtobufCMessage base;
  uint32_t id;
  uint32_t flags;
  uint64_t pos;
  FownEntry *fown;
  char *name;
  protobuf_c_boolean has_mnt_id;
  int32_t mnt_id;
  protobuf_c_boolean has_size;
  uint64_t size;
  protobuf_c_boolean has_ext;
  protobuf_c_boolean ext;
  protobuf_c_boolean has_mode;
  uint32_t mode;
};
#define REG_FILE_ENTRY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&reg_file_entry__descriptor) \
    , 0, 0, 0, NULL, NULL, 0,-1, 0,0, 0,0, 0,0 }


/* RegFileEntry methods */
void   reg_file_entry__init
                     (RegFileEntry         *message);
size_t reg_file_entry__get_packed_size
                     (const RegFileEntry   *message);
size_t reg_file_entry__pack
                     (const RegFileEntry   *message,
                      uint8_t             *out);
size_t reg_file_entry__pack_to_buffer
                     (const RegFileEntry   *message,
                      ProtobufCBuffer     *buffer);
RegFileEntry *
       reg_file_entry__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   reg_file_entry__free_unpacked
                     (RegFileEntry *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*RegFileEntry_Closure)
                 (const RegFileEntry *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor reg_file_entry__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_regfile_2eproto__INCLUDED */
