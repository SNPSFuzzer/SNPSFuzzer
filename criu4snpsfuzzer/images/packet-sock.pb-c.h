/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: packet-sock.proto */

#ifndef PROTOBUF_C_packet_2dsock_2eproto__INCLUDED
#define PROTOBUF_C_packet_2dsock_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "opts.pb-c.h"
#include "fown.pb-c.h"
#include "sk-opts.pb-c.h"

typedef struct _PacketMclist PacketMclist;
typedef struct _PacketRing PacketRing;
typedef struct _PacketSockEntry PacketSockEntry;


/* --- enums --- */


/* --- messages --- */

struct  _PacketMclist
{
  ProtobufCMessage base;
  uint32_t index;
  uint32_t type;
  ProtobufCBinaryData addr;
};
#define PACKET_MCLIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&packet_mclist__descriptor) \
    , 0, 0, {0,NULL} }


struct  _PacketRing
{
  ProtobufCMessage base;
  uint32_t block_size;
  uint32_t block_nr;
  uint32_t frame_size;
  uint32_t frame_nr;
  uint32_t retire_tmo;
  uint32_t sizeof_priv;
  uint32_t features;
};
#define PACKET_RING__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&packet_ring__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0 }


struct  _PacketSockEntry
{
  ProtobufCMessage base;
  uint32_t id;
  uint32_t type;
  uint32_t protocol;
  uint32_t flags;
  uint32_t ifindex;
  FownEntry *fown;
  SkOptsEntry *opts;
  uint32_t version;
  uint32_t reserve;
  protobuf_c_boolean aux_data;
  protobuf_c_boolean orig_dev;
  protobuf_c_boolean vnet_hdr;
  protobuf_c_boolean loss;
  uint32_t timestamp;
  uint32_t copy_thresh;
  size_t n_mclist;
  PacketMclist **mclist;
  protobuf_c_boolean has_fanout;
  uint32_t fanout;
  PacketRing *rx_ring;
  PacketRing *tx_ring;
  protobuf_c_boolean has_ns_id;
  uint32_t ns_id;
};
#define PACKET_SOCK_ENTRY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&packet_sock_entry__descriptor) \
    , 0, 0, 0, 0, 0, NULL, NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0,NULL, 0,4294967295u, NULL, NULL, 0,0 }


/* PacketMclist methods */
void   packet_mclist__init
                     (PacketMclist         *message);
size_t packet_mclist__get_packed_size
                     (const PacketMclist   *message);
size_t packet_mclist__pack
                     (const PacketMclist   *message,
                      uint8_t             *out);
size_t packet_mclist__pack_to_buffer
                     (const PacketMclist   *message,
                      ProtobufCBuffer     *buffer);
PacketMclist *
       packet_mclist__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   packet_mclist__free_unpacked
                     (PacketMclist *message,
                      ProtobufCAllocator *allocator);
/* PacketRing methods */
void   packet_ring__init
                     (PacketRing         *message);
size_t packet_ring__get_packed_size
                     (const PacketRing   *message);
size_t packet_ring__pack
                     (const PacketRing   *message,
                      uint8_t             *out);
size_t packet_ring__pack_to_buffer
                     (const PacketRing   *message,
                      ProtobufCBuffer     *buffer);
PacketRing *
       packet_ring__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   packet_ring__free_unpacked
                     (PacketRing *message,
                      ProtobufCAllocator *allocator);
/* PacketSockEntry methods */
void   packet_sock_entry__init
                     (PacketSockEntry         *message);
size_t packet_sock_entry__get_packed_size
                     (const PacketSockEntry   *message);
size_t packet_sock_entry__pack
                     (const PacketSockEntry   *message,
                      uint8_t             *out);
size_t packet_sock_entry__pack_to_buffer
                     (const PacketSockEntry   *message,
                      ProtobufCBuffer     *buffer);
PacketSockEntry *
       packet_sock_entry__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   packet_sock_entry__free_unpacked
                     (PacketSockEntry *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*PacketMclist_Closure)
                 (const PacketMclist *message,
                  void *closure_data);
typedef void (*PacketRing_Closure)
                 (const PacketRing *message,
                  void *closure_data);
typedef void (*PacketSockEntry_Closure)
                 (const PacketSockEntry *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor packet_mclist__descriptor;
extern const ProtobufCMessageDescriptor packet_ring__descriptor;
extern const ProtobufCMessageDescriptor packet_sock_entry__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_packet_2dsock_2eproto__INCLUDED */
