/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: siginfo.proto */

#ifndef PROTOBUF_C_siginfo_2eproto__INCLUDED
#define PROTOBUF_C_siginfo_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _SiginfoEntry SiginfoEntry;
typedef struct _SignalQueueEntry SignalQueueEntry;


/* --- enums --- */


/* --- messages --- */

struct  _SiginfoEntry
{
  ProtobufCMessage base;
  ProtobufCBinaryData siginfo;
};
#define SIGINFO_ENTRY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&siginfo_entry__descriptor) \
    , {0,NULL} }


struct  _SignalQueueEntry
{
  ProtobufCMessage base;
  size_t n_signals;
  SiginfoEntry **signals;
};
#define SIGNAL_QUEUE_ENTRY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&signal_queue_entry__descriptor) \
    , 0,NULL }


/* SiginfoEntry methods */
void   siginfo_entry__init
                     (SiginfoEntry         *message);
size_t siginfo_entry__get_packed_size
                     (const SiginfoEntry   *message);
size_t siginfo_entry__pack
                     (const SiginfoEntry   *message,
                      uint8_t             *out);
size_t siginfo_entry__pack_to_buffer
                     (const SiginfoEntry   *message,
                      ProtobufCBuffer     *buffer);
SiginfoEntry *
       siginfo_entry__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   siginfo_entry__free_unpacked
                     (SiginfoEntry *message,
                      ProtobufCAllocator *allocator);
/* SignalQueueEntry methods */
void   signal_queue_entry__init
                     (SignalQueueEntry         *message);
size_t signal_queue_entry__get_packed_size
                     (const SignalQueueEntry   *message);
size_t signal_queue_entry__pack
                     (const SignalQueueEntry   *message,
                      uint8_t             *out);
size_t signal_queue_entry__pack_to_buffer
                     (const SignalQueueEntry   *message,
                      ProtobufCBuffer     *buffer);
SignalQueueEntry *
       signal_queue_entry__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   signal_queue_entry__free_unpacked
                     (SignalQueueEntry *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*SiginfoEntry_Closure)
                 (const SiginfoEntry *message,
                  void *closure_data);
typedef void (*SignalQueueEntry_Closure)
                 (const SignalQueueEntry *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor siginfo_entry__descriptor;
extern const ProtobufCMessageDescriptor signal_queue_entry__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_siginfo_2eproto__INCLUDED */
